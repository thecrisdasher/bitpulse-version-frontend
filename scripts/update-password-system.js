#!/usr/bin/env node

/**
 * Script para actualizar el sistema de contrase√±as
 * Este script aplica los cambios necesarios para el nuevo sistema de cambio de contrase√±as
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ Iniciando actualizaci√≥n del sistema de contrase√±as...\n');

// 1. Generar el cliente de Prisma
console.log('üì¶ Generando cliente de Prisma...');
try {
  execSync('npx prisma generate', { stdio: 'inherit' });
  console.log('‚úÖ Cliente de Prisma generado exitosamente\n');
} catch (error) {
  console.error('‚ùå Error generando cliente de Prisma:', error.message);
  process.exit(1);
}

// 2. Aplicar cambios a la base de datos
console.log('üóÑÔ∏è Aplicando cambios a la base de datos...');
try {
  execSync('npx prisma db push', { stdio: 'inherit' });
  console.log('‚úÖ Cambios aplicados a la base de datos exitosamente\n');
} catch (error) {
  console.error('‚ùå Error aplicando cambios a la base de datos:', error.message);
  process.exit(1);
}

// 3. Actualizar c√≥digo para descomentar las l√≠neas relacionadas con mustChangePassword
console.log('üìù Actualizando c√≥digo...');

const filesToUpdate = [
  'app/api/admin/users/route.ts',
  'app/api/auth/change-password/route.ts'
];

filesToUpdate.forEach(filePath => {
  const fullPath = path.join(process.cwd(), filePath);
  
  if (fs.existsSync(fullPath)) {
    let content = fs.readFileSync(fullPath, 'utf8');
    
    // Descomentar l√≠neas relacionadas con mustChangePassword
    content = content.replace(
      /\/\/ (mustChangePassword: true,)/g,
      '$1'
    );
    content = content.replace(
      /\/\/ (mustChangePassword: true,) \/\/ Descomentar despu√©s de ejecutar: npx prisma generate && npx prisma db push/g,
      '$1'
    );
    content = content.replace(
      /\/\/ (updateData\.mustChangePassword = false;) \/\/ Descomentar despu√©s de la migraci√≥n/g,
      '$1'
    );
    content = content.replace(
      /\/\/ (mustChangePassword: true,) \/\/ Descomentar despu√©s de la migraci√≥n/g,
      '$1'
    );
    
    fs.writeFileSync(fullPath, content);
    console.log(`  ‚úÖ Actualizado: ${filePath}`);
  } else {
    console.log(`  ‚ö†Ô∏è  Archivo no encontrado: ${filePath}`);
  }
});

console.log('\nüéâ ¬°Actualizaci√≥n del sistema de contrase√±as completada exitosamente!');
console.log('\nCambios aplicados:');
console.log('- ‚úÖ Campo mustChangePassword agregado al modelo User');
console.log('- ‚úÖ API de cambio de contrase√±a implementado');
console.log('- ‚úÖ P√°gina de cambio de contrase√±a implementada');
console.log('- ‚úÖ Usuarios creados por admin configurados correctamente');
console.log('\nüìã Funcionalidades disponibles:');
console.log('- Los usuarios creados por admin pueden hacer login inmediatamente');
console.log('- En el primer login son redirigidos a /auth/change-password');
console.log('- Deben cambiar su contrase√±a temporal por una nueva');
console.log('- Una vez cambiada, pueden usar la plataforma normalmente');
console.log('\nüîß Para probar:');
console.log('1. Crea un usuario maestro desde el panel de admin');
console.log('2. Usa las credenciales temporales para hacer login');
console.log('3. Ser√°s redirigido autom√°ticamente a cambiar la contrase√±a');
console.log('4. ¬°Listo! Ya puedes usar la cuenta normalmente'); 